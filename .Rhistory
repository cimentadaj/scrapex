install.packages("pillar")
install.packages("crayon")
crayon::has_color()
options(crayo.enabled = TRUE)
red
crayon::red()
crayon::red("this is red text")
example("green")
library(crayon)
example("green")
setwd("~/repositories/essurvey/")
essurvey:::recode_numeric_missing
labels
missings
labels
labels[missings]
x
spn[[1]]$edulvla
spn[[2]]$edulvla
packageVersion("haven")
essurvey:::recode_strings_missing
names(.global_vars$all_codes)
names(essurvey:::.global_vars$all_codes)
?dplyr::add_count_
?recode_missings
ls()
?recode_missings
?import_country
ess_email <- "cimentadaj@gmail.com"
p_grid
p_grid
prior
likelihood
likelihood %>% round(2)
library(magrittr)
likelihood %>% round(2)
likelihood %>% round(2)
dbinom(5, size = 5)
dbinom(5, size = 5, prob = 0.5)
dbinom(5, size = 5, prob = 0.5)
dbinom(10, size = 5, prob = 0.5)
dbinom(100, size = 5, prob = 0.5)
dbinom(1, size = 5, prob = 0.5)
rbinom(10, 0.5)
rbinom(n = 10, size = 5, prob = 0.5)
rbinom(n = 1, size = 5, prob = 0.5)
rbinom(n = 2, size = 5, prob = 0.5)
rbinom(n = 2, size = 1, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 1, prob = 0.5)
p_grid
rbinom(n = 10, size = 1, prob = 0.5)
p_grid
likelihood %>% round(2)
unstd.posterior
posterior
posterior %>% round(2)
p_grid
prior
likelihood
 likelihood %>% round(2)
random_draw

prob_data
choose
pop
nam_cou <- "SWE"
name_cou <- "SWE"
pop
pop
choose
cmv
cmx
gender <- "Male"
cmv
cmx
time
pop_long %>% as_tibble()
time1
time2
time1
pak::pkg_install("colorspace")
library(colorspace)
hcl_pallettes()
colorspace::hcl_palettes()
colorspace::hcl_palettes(plot = TRUE))
colorspace::hcl_palettes(plot = TRUE)
pak::pkg_install("renv")
pak::pkg_install("rstudio::renv")
pak::pkg_install("rstudio/renv")
Y
renv::init()
class(x)
str(x)
unclass(x)
attributes(x)
x <- -1
attributes(x)
typeof(fit)
class(fit)
typeof(x)
set_errors(1:10)
errors(set_errors(1:10))
length(seq(0, 1, 0.1))
x
errors(x)
x + x
x
x + x
isS3stdGeneric(print)
isS3stdGeneric(lm)
isS3stdGeneric
body(print)
class(body(print))
typeof(body(print))
(body(print))
    bdexpr <- body(f)
    bdexpr <- body(print)
as.cjaracter(bdexpr[[1L]])
as.character(bdexpr[[1L]])
as.character(bdexpr[[2L]])
as.character(bdexpr)
is.call(bdexpr)
bdexpr[[1L]]
as.character(bdexpr[[1L]])
isS3stdGeneric(identical)
identical
bdexpr[[1L]]
.S3PrimitiveGenerics
anyNA
anyNA.numeric_version
anyNA.POSIXlt
anyNA.defult
anyNA.default
c
c.numeric_version
err
x
print(x)
x
class(x)
unclass(x)
x
x
x
class(x)
typeof(x)
x
x
class(x)
class(x)
setdiff(class(x), "errors")
class(x) <- setdiff(class(x), "errors")
x
class(x)
class
set_errors(1:10, 1:10)
x
x <- set_errors(1:10, seq(0.1, 1, 0.1))
x
x[1:5]
set_errors(1:10, 1:3)
x
x[1:5]
`
`[`.numeric
`[`
methods(`[`)
NextMethod
.Internal
x
y <- x
x
y
errors(y)
c(x, y)
c
formals(c)
x
y
c(x, y)
errors(c(x, y))
errors(c(x, y))
x
y
x[1:5]
x[1:3]
c(x[1:3], y[8:9])
y
y[8:9]
x[1:3]
c(x[1:3], x[7:8])
c(x[1:3], x[7:8])
c(x[1:3], x[7:8])
pak::pkg_install("errors")
Y
errors:::Ops.errors
errors:::warn_once
sqp_login("asqme", "asqme")
find_studies("test_jorge")
study_id <- find_studies("test_jorge")$id
question_id <- find_questions(study_id, "PV1")
question_id
question_id$id
estimates <- get_estimates(question_id$id)
estimates
library(sqpr)
find_studies("test_jorge")
id <- find_studies("test_jorge")$id
find_questions(id, "PV1")
q_id <- find_questions(id, "PV1")$id
get_estimates(q_id)
find_studies("ESS Round 1")
find_questions(1, "stflife")
q_id <- find_questions(1, "stflife")
q_id %>% filter(country_iso == "ES")
q_id %>% filter(country_iso == "ES", language_iso == "spa")
q_id %>% filter(country_iso == "ES", language_iso == "spa") %>% pull(id)
q_id_f <- q_id %>% filter(country_iso == "ES", language_iso == "spa") %>% pull(id)
q_id_f
get_estimates(q_id_f)
q_id_f
q_id_f
df
lavaan.survey::lavaan.survey
head(post)
head(post)
head(post)
hist(post$prob)
dens(sample.mu)
head(post)
d3
head(post2)
d3
sd(d3)
dens(sample2.sigma, norm.comp = TRUE)
dens(sample.sigma, norm.comp = TRUE)
dnorm(1:10, 5, 1)
sum(dnorm(1:10, 5, 1))
sum(dnorm(1:1e4, 5, 1))
sum(dnorm(1:10, 5, 1))
rnorm(1:10, 5, 1)
head(d2)
nrow(d2)
nrow(d)
formals(pinrt)
formals(print)
class(formals(print))
unclass(formals(print))
class(unclass(formals(print)))
class(formals(print)))
class(formals(print))
alist(x = 5, p = heeeyy)
class(alist(x = 5, p = heeeyy))
heeey
class(alist(x = 5, p = heeeyy))
alist(formals())
flist
dnorm(178, 20)
quap
quap
print.map
rethinking:::print.map
rethinking:::quap
precis(d2$height)
head(post)
coef(m4.1)
head(post)
a
head(d2)
N
nrow(d2)
x
a
a
rlnorm(5, 0, 1)
log(-1)
log(-1)
rlnorm(5, 0, 1)
i <- 1
setwd("../..")
getwd()
renv::restore()
Y
renv::status
renv::status()
renv::init()
pak::pkg_install("MortalitySmooth")
Y
renv::status()
179.52 Â¿ 6.28
179.52 + 6.28
?pkgdown::deploy_site_github
setwd("..")
travis::use_travis_deploy()
travis::use_travis_deploy()
pak::pkg_install("tidyverse/tidyr")
Y
remotes::install_github("tidyverse/tidyr")
1
relig_income
rmarkdown::render('README.Rmd', output_format = 'all')
Sys.setenv(SQP_USER = "asqme", SQP_PW = "asqme")
rmarkdown::render('README.Rmd', output_format = 'all')
get_sqp
find_studies
'best
httr::stop_for_status()
rlang::error_cnd("my error")
rlang::error_cnd("http_404/http_403/error")
citations()
citation()
citation("perccalc")
citation("essurvey")
pak::pkg_install("essurvey")
library(essurvey)
setwd("~/repositories/cimentadaj.github.io")
pak::pkg_install("pbiecek/PISA2000lite")
Y
nchar("11010")
str_split("0000")
str_split("0000", "")
formatC(0, digits = 5, flag = "0")
formatC(0, digits = 5, flag = "0", format = "d")
mat_autonomy
mat_autonomy[1,]
as.numeric(mat_autonomy[1,])
as.numeric(mat_autonomy[1,2:5])
x <- as.numeric(mat_autonomy[1,2:5])
x
x %in% 1
x
1/4
x
rm(x)
head(mat_autonomy[, 2:5])
"00001"
str_sub("00001")
str_sub("00001", end = 1)
str_sub("10001", end = 1)
head(mat_autonomy)
autonomy_test <- 1
install.packages("essurvey")
show_sddf_cntrounds("Spain")
show_sddf_cntrounds("Denmark")
show_sddf_cntrounds("Latvia")
show_sddf_cntrounds("Greece")
show_sddf_cntrounds("Denmark")
show_sddf_cntrounds("Spain")
ita_df <- import_sddf_country("Italy", rounds = 8)
usethis::use_data_raw()
school_links
getwd()
list.files()
usethis::use_package("here")
i
school_links
getwd()
list.files()
getwd()
getwd()
download_req
download_req
html_files
pkg_dir
pkg_dir
pkg_dir
list.files(file.path(pkg_dir, "inst/extdata"))
list.files(file.path(pkg_dir))
list.files(file.path(pkg_dir, "extdata"))
getwd()
html_files
list.files(zip_data)
list.files(file.path(zip_data, "spanish_schools_ex"))
html_files
usethis::use_test("spanish_schools_ex")
html_links
devtools::install_github("cimentadaj/scrapex")
1
usethis::use_readme_rmd()
spanish
usethis::use_appveyor()
usethis::use_travis()
devtools::install_github("cimentadaj/scrapex")
devtools::install_github("cimentadaj/scrapex", force = TRUE)
usethis::use_package("utils")
dir_school
i <- 11
i <- 1
dir_school
install.packages("zip")
?zip::zip
usethis::use_package("zip")
dir_school
spanish_schools_ex()
spanish_schools_ex()
i <- 1
school_links
dir_school
tst <- spanish_schools_ex()
